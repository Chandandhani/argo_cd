# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"rollouts-controller","app.kubernetes.io/name":"argo-rollouts","app.kubernetes.io/part-of":"argo-rollouts"},"name":"argo-rollouts","namespace":"argo-rollouts"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"argo-rollouts"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argo-rollouts"}},"spec":{"containers":[{"image":"quay.io/argoproj/argo-rollouts:v1.8.3","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":20,"successThreshold":1,"timeoutSeconds":10},"name":"argo-rollouts","ports":[{"containerPort":8090,"name":"metrics"},{"containerPort":8080,"name":"healthz"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/metrics","port":"metrics"},"initialDelaySeconds":10,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":4},"resources":{"limits":{"ephemeral-storage":"1Gi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/home/argo-rollouts/plugin-bin","name":"plugin-bin"},{"mountPath":"/tmp","name":"tmp"}]}],"securityContext":{"runAsNonRoot":true},"serviceAccountName":"argo-rollouts","volumes":[{"emptyDir":{},"name":"plugin-bin"},{"emptyDir":{},"name":"tmp"}]}}}}
  creationTimestamp: "2025-09-25T11:15:38Z"
  generation: 3
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts
  namespace: argo-rollouts
  resourceVersion: "30607"
  uid: 13d96ca3-2c24-4839-9e20-93ce132abd68
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-rollouts
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-09-25T14:44:35Z"
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: argo-rollouts
    spec:
      containers:
        image: quay.io/argoproj/argo-rollouts:v1.8.3
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        name: argo-rollouts
        ports:
        - containerPort: 8090
          name: metrics
          protocol: TCP
        - containerPort: 8080
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: metrics
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 4
        resources:
          limits:
            ephemeral-storage: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /home/argo-rollouts/plugin-bin
          name: plugin-bin
        - mountPath: /tmp
          name: tmp
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      serviceAccount: argo-rollouts
      serviceAccountName: argo-rollouts
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: plugin-bin
      - emptyDir: {}
        name: tmp
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-09-25T14:39:03Z"
    lastUpdateTime: "2025-09-25T14:39:03Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-09-25T11:27:53Z"
    lastUpdateTime: "2025-09-25T14:44:35Z"
    message: ReplicaSet "argo-rollouts-547f55f8dd" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 2
  unavailableReplicas: 1
  updatedReplicas: 1
